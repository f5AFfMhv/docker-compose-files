# Grafana allows you to query, visualize, alert on and understand your metrics no matter where they are stored.
# https://github.com/grafana/grafana
---
version: "3"

services:
  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    user: '1000:1000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${grafana_pass}
      - GF_INSTALL_PLUGINS=marcusolsson-json-datasource
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_HOME=/usr/share/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - TZ=${time_zone}
    volumes:
      - ${config_dir}/grafana/data:/var/lib/grafana
      # - ${config_dir}/grafana/config:/etc/grafana
    # ports:
    #   - 3000:3000
    restart: unless-stopped

# Prometheus, a Cloud Native Computing Foundation project, is a systems and service monitoring system.
# https://github.com/prometheus/prometheus
  prometheus:
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=1y" # How long historical data should be saved
    image: prom/prometheus:latest
    container_name: prometheus
    user: '1000:1000'
    environment:
      - TZ=${time_zone}
    volumes:
      - ${config_dir}/prometheus/data:/prometheus
      - ${config_dir}/prometheus/config:/etc/prometheus
    # ports:
    #   - 9090:9090
    restart: unless-stopped

# InfluxDB is a time series database built from the ground up to handle high write and query loads.
# https://hub.docker.com/_/influxdb
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    user: '1000:1000'
    environment:
      - TZ=${time_zone}
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${influx_user}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${influx_pass}
      - DOCKER_INFLUXDB_INIT_ORG=home
      - DOCKER_INFLUXDB_INIT_BUCKET=pve
    volumes:
      - ${config_dir}/influxdb/data:/var/lib/influxdb
      - ${config_dir}/influxdb/config:/etc/influxdb
    # ports:
    #   - 8086:8086
    restart: unless-stopped

networks:
  default:
    external:
      name: caddy-network
